{"ast":null,"code":"import _objectSpread from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Tracks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Redirect } from \"react-router\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport osu from \"../services/osu\";\nimport spotify from \"../services/spotify\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: \"1.5em\",\n    minWidth: 500\n  }\n}));\n\nconst Tracks = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        tracks = _useState2[0],\n        setTracks = _useState2[1];\n\n  const _useState3 = useState(props.location.state.tokens.accessToken),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newAccessToken = _useState4[0],\n        setNewAccessToken = _useState4[1];\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSingular = async (track, id) => {\n    let response = await osu.getTrack(track, id);\n\n    for (track of tracks) {\n      if (track.track.id === response.id) {\n        let index = tracks.findIndex(track => track.track.id === response.id);\n\n        let updatedTrack = _objectSpread({}, track, {\n          beatmaps: response.osuTracks\n        });\n\n        tracks[index] = updatedTrack;\n        let copy = [...tracks];\n        setTracks(copy);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      //console.log(props.location.state)\n      let response = await spotify.getTracks({\n        id: props.location.state.list.id,\n        accessToken: newAccessToken,\n        refreshToken: props.location.state.tokens.refreshToken\n      });\n      setTracks(response.tracks.items);\n      if (response.refreshedToken) setNewAccessToken(response.refreshedToken);\n    };\n\n    fetchTracks();\n  }, [newAccessToken, props.location.state.list.id, props.location.state.tokens.refreshToken]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.location.state ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.location.state.list.name), React.createElement(Link, {\n    to: {\n      pathname: \"/main/\",\n      state: {\n        history: props.location.state.list.id,\n        cachedPlaylist: props.location.state.playlist,\n        refreshToken: props.location.state.tokens.refreshToken,\n        accessToken: newAccessToken\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Go back\")), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, tracks ? tracks.map(track => React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    xl: 4,\n    justify: \"center\",\n    key: track.track.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, track.track.name), React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Lorem\"), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"ID: \", track.track.id))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, track.beatmaps ? React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Beatmaps\") : React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleSingular(track.track, track.track.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Get\")))))) : React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Text in a modal\"), React.createElement(\"p\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\")))) : React.createElement(Redirect, {\n    to: \"/main/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }));\n};\n\nexport default Tracks;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Tracks.js"],"names":["React","useState","useEffect","Link","Button","Grid","Typography","CircularProgress","Redirect","Paper","makeStyles","Modal","osu","spotify","useStyles","theme","paper","padding","minWidth","Tracks","props","tracks","setTracks","location","state","tokens","accessToken","newAccessToken","setNewAccessToken","open","setOpen","classes","handleOpen","handleClose","handleSingular","track","id","response","getTrack","index","findIndex","updatedTrack","beatmaps","osuTracks","copy","fetchTracks","getTracks","list","refreshToken","items","refreshedToken","name","pathname","history","cachedPlaylist","playlist","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { CircularProgress } from \"@material-ui/core\"\r\nimport { Redirect } from \"react-router\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Modal from \"@material-ui/core/Modal\"\r\n\r\nimport osu from \"../services/osu\"\r\nimport spotify from \"../services/spotify\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: \"1.5em\",\r\n        minWidth: 500\r\n    }\r\n}))\r\n\r\nconst Tracks = props => {\r\n    const [tracks, setTracks] = useState(null)\r\n    const [newAccessToken, setNewAccessToken] = useState(\r\n        props.location.state.tokens.accessToken\r\n    )\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    const handleSingular = async (track, id) => {\r\n        let response = await osu.getTrack(track, id)\r\n        for (track of tracks) {\r\n            if (track.track.id === response.id) {\r\n                let index = tracks.findIndex(\r\n                    track => track.track.id === response.id\r\n                )\r\n                let updatedTrack = {\r\n                    ...track,\r\n                    beatmaps: response.osuTracks\r\n                }\r\n                tracks[index] = updatedTrack\r\n                let copy = [...tracks]\r\n                setTracks(copy)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchTracks = async () => {\r\n            //console.log(props.location.state)\r\n            let response = await spotify.getTracks({\r\n                id: props.location.state.list.id,\r\n                accessToken: newAccessToken,\r\n                refreshToken: props.location.state.tokens.refreshToken\r\n            })\r\n            setTracks(response.tracks.items)\r\n            if (response.refreshedToken)\r\n                setNewAccessToken(response.refreshedToken)\r\n        }\r\n        fetchTracks()\r\n    }, [\r\n        newAccessToken,\r\n        props.location.state.list.id,\r\n        props.location.state.tokens.refreshToken\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            {props.location.state ? (\r\n                <div>\r\n                    <Typography variant=\"h6\">\r\n                        {props.location.state.list.name}\r\n                    </Typography>\r\n\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/main/\",\r\n                            state: {\r\n                                history: props.location.state.list.id,\r\n                                cachedPlaylist: props.location.state.playlist,\r\n                                refreshToken:\r\n                                    props.location.state.tokens.refreshToken,\r\n                                accessToken: newAccessToken\r\n                            }\r\n                        }}\r\n                    >\r\n                        <Button variant=\"contained\" color=\"secondary\">\r\n                            Go back\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <Grid container spacing={2}>\r\n                        {tracks ? (\r\n                            tracks.map(track => (\r\n                                <Grid\r\n                                    container\r\n                                    item\r\n                                    xs={12}\r\n                                    md={6}\r\n                                    xl={4}\r\n                                    justify=\"center\"\r\n                                    key={track.track.id}\r\n                                >\r\n                                    <Paper className={classes.paper}>\r\n                                        <Grid item xs={12} sm container>\r\n                                            <Grid\r\n                                                item\r\n                                                xs\r\n                                                container\r\n                                                direction=\"column\"\r\n                                                spacing={2}\r\n                                            >\r\n                                                <Grid item xs>\r\n                                                    <Typography\r\n                                                        gutterBottom\r\n                                                        variant=\"subtitle1\"\r\n                                                    >\r\n                                                        {track.track.name}\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"body2\"\r\n                                                        gutterBottom\r\n                                                    >\r\n                                                        Lorem\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"body2\"\r\n                                                        color=\"textSecondary\"\r\n                                                    >\r\n                                                        ID: {track.track.id}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                {track.beatmaps ? (\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        onClick={handleOpen}\r\n                                                    >\r\n                                                        Beatmaps\r\n                                                    </Button>\r\n                                                ) : (\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        onClick={() =>\r\n                                                            handleSingular(\r\n                                                                track.track,\r\n                                                                track.track.id\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        Get\r\n                                                    </Button>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))\r\n                        ) : (\r\n                            <CircularProgress />\r\n                        )}\r\n                    </Grid>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n                            <p id=\"simple-modal-description\">\r\n                                Duis mollis, est non commodo luctus, nisi erat\r\n                                porttitor ligula.\r\n                            </p>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            ) : (\r\n                <Redirect to=\"/main/\" />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tracks\r\n"]},"metadata":{},"sourceType":"module"}