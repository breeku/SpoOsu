{"ast":null,"code":"import _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Tracks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport spotify from \"../services/spotify\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Redirect } from \"react-router\";\n\nconst Tracks = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        tracks = _useState2[0],\n        setTracks = _useState2[1];\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      //console.log(props.location.state)\n      let response = await spotify.getTracks({\n        id: props.location.state.list.id,\n        accessToken: props.location.state.tokens.accessToken,\n        refreshToken: props.location.state.tokens.refreshToken\n      });\n      setTracks(response.tracks.items);\n      console.log(response);\n    };\n\n    fetchTracks();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.location.state ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.location.state.list.name)), React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/main/\",\n      state: {\n        history: props.location.state.list.id,\n        cachedPlaylist: props.location.state.playlist,\n        refreshToken: props.location.state.tokens.refreshToken\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Go back\")))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, tracks ? tracks.map(track => React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    xl: 4,\n    justify: \"center\",\n    key: track.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, track.track.name))) : React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))) : React.createElement(Redirect, {\n    to: \"/main/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default Tracks;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Tracks.js"],"names":["React","useState","useEffect","Link","Button","Grid","Typography","spotify","CircularProgress","Redirect","Tracks","props","tracks","setTracks","fetchTracks","response","getTracks","id","location","state","list","accessToken","tokens","refreshToken","items","console","log","name","pathname","history","cachedPlaylist","playlist","map","track"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACQV,QAAQ,CAAC,IAAD,CADhB;AAAA;AAAA,QACbW,MADa;AAAA,QACLC,SADK;;AAGpBX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,WAAW,GAAG,YAAY;AAC5B;AACA,UAAIC,QAAQ,GAAG,MAAMR,OAAO,CAACS,SAAR,CAAkB;AACnCC,QAAAA,EAAE,EAAEN,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BH,EADK;AAEnCI,QAAAA,WAAW,EAAEV,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBG,MAArB,CAA4BD,WAFN;AAGnCE,QAAAA,YAAY,EAAEZ,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBG,MAArB,CAA4BC;AAHP,OAAlB,CAArB;AAKAV,MAAAA,SAAS,CAACE,QAAQ,CAACH,MAAT,CAAgBY,KAAjB,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACH,KATD;;AAUAD,IAAAA,WAAW;AACd,GAZQ,EAYN,EAZM,CAAT;AAcA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACO,QAAN,CAAeC,KAAf,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BO,IAD/B,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAE;AACAC,MAAAA,QAAQ,EAAE,QADV;AAEAT,MAAAA,KAAK,EAAE;AACHU,QAAAA,OAAO,EAAElB,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BH,EADhC;AAEHa,QAAAA,cAAc,EAAEnB,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBY,QAFlC;AAGHR,QAAAA,YAAY,EAAEZ,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqBG,MAArB,CAA4BC;AAHvC;AAFP,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,CADJ,CANJ,CADI,EAwBJ,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCX,MAAM,GAAGA,MAAM,CAACoB,GAAP,CAAWC,KAAK,IACtB,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,IAAI,MAFR;AAGI,IAAA,EAAE,EAAE,EAHR;AAII,IAAA,EAAE,EAAE,CAJR;AAKI,IAAA,EAAE,EAAE,CALR;AAMI,IAAA,OAAO,EAAC,QANZ;AAOI,IAAA,GAAG,EAAEA,KAAK,CAAChB,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAagB,KAAK,CAACA,KAAN,CAAYN,IAAzB,CATJ,CADM,CAAH,GAYF,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbL,CAxBI,CADH,GAyCD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CJ,CADJ;AA6CH,CA9DD;;AAgEA,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport spotify from \"../services/spotify\"\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router\"\r\n\r\nconst Tracks = props => {\r\n    const [tracks, setTracks] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchTracks = async () => {\r\n            //console.log(props.location.state)\r\n            let response = await spotify.getTracks({\r\n                id: props.location.state.list.id,\r\n                accessToken: props.location.state.tokens.accessToken,\r\n                refreshToken: props.location.state.tokens.refreshToken\r\n            })\r\n            setTracks(response.tracks.items)\r\n            console.log(response)\r\n        }\r\n        fetchTracks()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {props.location.state ? (\r\n                <div>\r\n            <Grid container spacing={1} justify=\"center\">\r\n                <Grid item xs=\"12\">\r\n                    <Typography variant=\"h6\">\r\n                        {props.location.state.list.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs=\"12\">\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/main/\",\r\n                            state: {\r\n                                history: props.location.state.list.id,\r\n                                cachedPlaylist: props.location.state.playlist,\r\n                                refreshToken: props.location.state.tokens.refreshToken,\r\n                            }\r\n                        }}\r\n                    >\r\n                        <Button variant=\"contained\" color=\"secondary\">\r\n                            Go back\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n            {tracks ? tracks.map(track => (\r\n                <Grid\r\n                    container\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                    xl={4}\r\n                    justify=\"center\"\r\n                    key={track.id}\r\n                >\r\n                    <Typography>{track.track.name}</Typography>\r\n                </Grid>\r\n            )) : <CircularProgress/>}\r\n            </Grid>\r\n            </div>\r\n        ) : <Redirect to=\"/main/\"/>}</div>\r\n    )\r\n}\r\n\r\nexport default Tracks\r\n"]},"metadata":{},"sourceType":"module"}