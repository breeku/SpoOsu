{"ast":null,"code":"import _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Tracks\\\\TrackList.js\";\nimport React, { useState, Fragment } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Dialog from '@material-ui/core/Dialog';\nimport Beatmaps from \"./Beatmaps\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: \"1.5em\",\n    minWidth: 500\n  },\n  textPaper: {\n    color: \"white\",\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  },\n  buttonCenter: {\n    margin: \"auto\",\n    paddingLeft: \"1em\"\n  }\n}));\n\nconst TrackList = ({\n  handleSingular,\n  loading,\n  track\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 4,\n    justify: \"center\",\n    key: track.track.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    style: {\n      backgroundImage: \"url(\".concat(track.track.album.images[0].url, \")\"),\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    className: classes.textPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, track.track.artists[0].name), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, track.track.name), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"ID: \", track.track.id))), React.createElement(Grid, {\n    item: true,\n    className: classes.buttonCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, track.beatmaps ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, track.beatmaps.result_count === 0 ? React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    className: classes.textPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"No beatmaps :(\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Maps\"), React.createElement(Dialog, {\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Beatmaps, {\n    beatmaps: track.beatmaps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })))) : !loading.find(track.track.id) ? React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleSingular(track.track, track.track.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Get\") : React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })))));\n};\n\nexport default TrackList;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Tracks\\TrackList.js"],"names":["React","useState","Fragment","Paper","Button","Grid","Typography","makeStyles","CircularProgress","Dialog","Beatmaps","useStyles","theme","paper","padding","minWidth","textPaper","color","backgroundColor","buttonCenter","margin","paddingLeft","TrackList","handleSingular","loading","track","open","setOpen","classes","handleOpen","handleClose","id","backgroundImage","album","images","url","backgroundPosition","backgroundSize","backgroundRepeat","artists","name","beatmaps","result_count","find"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\" \r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { CircularProgress } from \"@material-ui/core\"\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport Beatmaps from \"./Beatmaps\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: \"1.5em\",\r\n        minWidth: 500,\r\n    },\r\n    textPaper: {\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,0.4)\"\r\n    },\r\n    buttonCenter: {\r\n        margin: \"auto\",\r\n        paddingLeft: \"1em\"\r\n    }\r\n}))\r\n\r\nconst TrackList = ({ handleSingular, loading, track }) => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container item xs={4} justify=\"center\" key={track.track.id}>\r\n            <Paper\r\n                className={classes.paper}\r\n                style={{\r\n                    backgroundImage: `url(${track.track.album.images[0].url})`,\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                }}\r\n            >\r\n                <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                        <Grid item xs className={classes.textPaper}>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                {track.track.artists[0].name}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"subtitle1\">\r\n                                {track.track.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                ID: {track.track.id}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item className={classes.buttonCenter}>\r\n                        {track.beatmaps ? (\r\n                            <Fragment>\r\n                                {track.beatmaps.result_count === 0 ? \r\n                                <Typography gutterBottom variant=\"h6\" className={classes.textPaper}>No beatmaps :(</Typography> \r\n                                    : \r\n                                <div>\r\n                                    <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={handleOpen}\r\n                                >\r\n                                    Maps\r\n                                </Button>\r\n                                <Dialog\r\n                                    aria-labelledby=\"alert-dialog-title\"\r\n                                    aria-describedby=\"alert-dialog-description\"\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <Beatmaps beatmaps={track.beatmaps} />\r\n                                </Dialog>\r\n                                </div>\r\n                            }\r\n                            </Fragment>\r\n                        ) : !loading.find(track.track.id) ? (\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                    handleSingular(track.track, track.track.id)\r\n                                }\r\n                            >\r\n                                Get\r\n                            </Button>\r\n                        ) : (\r\n                            <CircularProgress />\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TrackList\r\n"]},"metadata":{},"sourceType":"module"}