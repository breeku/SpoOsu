{"ast":null,"code":"import _objectSpread from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Tracks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Redirect } from \"react-router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TrackList from \"./Tracks/TrackList\";\nimport spotify from \"../services/spotify\";\nimport osu from \"../services/osu\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: \"1.5em\",\n    minWidth: 500\n  },\n  header: {\n    marginTop: \"0.5em\"\n  },\n  modal: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 4),\n    transform: \"translate(-50%, -50%)\",\n    top: \"50%\",\n    left: \"50%\"\n  },\n  image: {\n    maxWidth: 180,\n    maxHeight: 180\n  },\n  textCentered: {\n    color: \"white\",\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  },\n  buttonCenter: {\n    margin: \"auto\",\n    paddingLeft: \"1em\"\n  }\n}));\n\nconst Tracks = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        tracks = _useState2[0],\n        setTracks = _useState2[1];\n\n  const _useState3 = useState(props.location.state.tokens.accessToken),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newAccessToken = _useState4[0],\n        setNewAccessToken = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        checked = _useState8[0],\n        setChecked = _useState8[1];\n\n  const classes = useStyles();\n\n  const handleCheck = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleSingular = async (track, id) => {\n    setLoading(id);\n    let copy = [...tracks];\n    let response = await osu.getTrack(track, id);\n\n    for (track of copy) {\n      if (track.track.id === response.id) {\n        let index = copy.findIndex(track => track.track.id === response.id);\n\n        let updatedTrack = _objectSpread({}, track, {\n          beatmaps: response.osuTracks\n        });\n\n        copy[index] = updatedTrack;\n        setTracks(copy);\n        setLoading(null);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      let response = await spotify.getTracks({\n        id: props.location.state.list.id,\n        accessToken: newAccessToken,\n        refreshToken: props.location.state.tokens.refreshToken\n      });\n      setTracks(response.tracks.items);\n      if (response.refreshedToken) setNewAccessToken(response.refreshedToken);\n    };\n\n    fetchTracks();\n  }, [newAccessToken, props.location.state.list.id, props.location.state.tokens.refreshToken]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, props.location.state ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.location.state.list.name), React.createElement(Link, {\n    to: {\n      pathname: \"/main/\",\n      state: {\n        history: props.location.state.list.id,\n        cachedPlaylist: props.location.state.playlist,\n        refreshToken: props.location.state.tokens.refreshToken,\n        accessToken: newAccessToken\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Go back\")), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, tracks ? tracks.map(track => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleCheck,\n    value: \"checked\",\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(TrackList, {\n    handleSingular: handleSingular,\n    loading: loading,\n    track: track,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))) : React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))) : React.createElement(Redirect, {\n    to: \"/main/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }));\n};\n\nexport default Tracks;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Tracks.js"],"names":["React","useState","useEffect","Link","Button","Grid","Typography","CircularProgress","Redirect","makeStyles","Checkbox","TrackList","spotify","osu","useStyles","theme","paper","padding","minWidth","header","marginTop","modal","position","width","backgroundColor","palette","background","border","boxShadow","shadows","spacing","transform","top","left","image","maxWidth","maxHeight","textCentered","color","buttonCenter","margin","paddingLeft","Tracks","props","tracks","setTracks","location","state","tokens","accessToken","newAccessToken","setNewAccessToken","loading","setLoading","checked","setChecked","classes","handleCheck","event","target","handleSingular","track","id","copy","response","getTrack","index","findIndex","updatedTrack","beatmaps","osuTracks","fetchTracks","getTracks","list","refreshToken","items","refreshedToken","name","pathname","history","cachedPlaylist","playlist","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { CircularProgress } from \"@material-ui/core\"\r\nimport { Redirect } from \"react-router\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport TrackList from \"./Tracks/TrackList\"\r\n\r\nimport spotify from \"../services/spotify\"\r\nimport osu from \"../services/osu\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: \"1.5em\",\r\n        minWidth: 500,\r\n    },\r\n    header: {\r\n        marginTop: \"0.5em\",\r\n    },\r\n    modal: {\r\n        position: \"absolute\",\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 4),\r\n        transform: \"translate(-50%, -50%)\",\r\n        top: \"50%\",\r\n        left: \"50%\"\r\n    },\r\n    image: {\r\n        maxWidth: 180,\r\n        maxHeight: 180\r\n    },\r\n    textCentered: {\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,0.4)\"\r\n    },\r\n    buttonCenter: {\r\n        margin: \"auto\",\r\n        paddingLeft: \"1em\"\r\n    }\r\n}))\r\n\r\nconst Tracks = props => {\r\n    const [tracks, setTracks] = useState(null)\r\n    const [newAccessToken, setNewAccessToken] = useState(\r\n        props.location.state.tokens.accessToken\r\n    )\r\n    const [loading, setLoading] = useState(null)\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleCheck = event => {\r\n        setChecked(event.target.checked)\r\n    }\r\n\r\n    const handleSingular = async (track, id) => {\r\n        setLoading(id)\r\n        let copy = [...tracks]\r\n        let response = await osu.getTrack(track, id)\r\n        for (track of copy) {\r\n            if (track.track.id === response.id) {\r\n                let index = copy.findIndex(\r\n                    track => track.track.id === response.id\r\n                )\r\n                let updatedTrack = {\r\n                    ...track,\r\n                    beatmaps: response.osuTracks\r\n                }\r\n                copy[index] = updatedTrack\r\n                setTracks(copy)\r\n                setLoading(null)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchTracks = async () => {\r\n            let response = await spotify.getTracks({\r\n                id: props.location.state.list.id,\r\n                accessToken: newAccessToken,\r\n                refreshToken: props.location.state.tokens.refreshToken\r\n            })\r\n            setTracks(response.tracks.items)\r\n            if (response.refreshedToken)\r\n                setNewAccessToken(response.refreshedToken)\r\n        }\r\n        fetchTracks()\r\n    }, [\r\n        newAccessToken,\r\n        props.location.state.list.id,\r\n        props.location.state.tokens.refreshToken\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            {props.location.state ? (\r\n                <div>\r\n                    <Typography variant=\"h6\">\r\n                        {props.location.state.list.name}\r\n                    </Typography>\r\n\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/main/\",\r\n                            state: {\r\n                                history: props.location.state.list.id,\r\n                                cachedPlaylist: props.location.state.playlist,\r\n                                refreshToken:\r\n                                    props.location.state.tokens.refreshToken,\r\n                                accessToken: newAccessToken\r\n                            }\r\n                        }}\r\n                    >\r\n                        <Button variant=\"contained\" color=\"secondary\">\r\n                            Go back\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <Grid container spacing={2} className={classes.header}>\r\n                        {tracks ? (\r\n                            tracks.map(track => (\r\n                                <div>\r\n                                    <Checkbox checked={checked} onChange={handleCheck} value=\"checked\" inputProps={{'aria-label': 'primary checkbox'}}/>\r\n                                    <TrackList handleSingular={handleSingular} loading={loading} track={track}/>\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <CircularProgress />\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <Redirect to=\"/main/\" />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tracks\r\n"]},"metadata":{},"sourceType":"module"}