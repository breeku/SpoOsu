{"ast":null,"code":"import _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Playlists.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport spotifyPlaylists from \"../services/spotifyPlaylists\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport debug from \"../helpers/debug\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    margin: \"0.5em\",\n    minWidth: 400,\n    maxWidth: 400,\n    minHeight: 400,\n    maxHeight: 400,\n    backgroundColor: \"rgba(0,0,0,0)\",\n    transition: \"transform .2s\",\n    \"&:hover\": {\n      transform: \"scale(1.03)\"\n    }\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 320,\n    fontSize: theme.typography.pxToRem(14),\n    border: \"1px solid #dadde9\"\n  }\n}))(Tooltip);\n\nconst Playlists = ({\n  accessToken,\n  refreshToken,\n  history\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        playlist = _useState2[0],\n        setPlaylist = _useState2[1];\n\n  const classes = useStyles();\n  const tokens = {\n    accessToken,\n    refreshToken\n  };\n  const currentElement = useCallback(node => {\n    if (node !== null) {\n      if (node.className === history) {\n        node.scrollIntoView({\n          block: \"center\",\n          behavior: \"smooth\"\n        });\n        console.log(\"scrolling to \" + node.className);\n      }\n    }\n  }, [history]);\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      //let response = await spotifyPlaylists.getPlaylists(tokens)\n      //console.log(response)\n      //setPlaylist(response.items)\n      setPlaylist(debug.items);\n    };\n\n    fetchPlaylists(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Grid, {\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, playlist.map(list => React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(HtmlTooltip, {\n    title: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, list.name), React.createElement(Typography, {\n      variant: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Tracks: \", list.tracks.total, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \"Made by: \", list.owner.display_name)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\".concat(list.id),\n    ref: currentElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/main/tracks/\",\n      state: {\n        list\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    style: {\n      backgroundImage: \"url(\".concat(list.images[0].url, \")\"),\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      opacity: \"1\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })))))))));\n};\n\nexport default Playlists;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Playlists.js"],"names":["React","useState","useEffect","useCallback","spotifyPlaylists","Grid","Paper","makeStyles","withStyles","Container","Link","Tooltip","Typography","debug","useStyles","theme","root","flexGrow","paper","margin","minWidth","maxWidth","minHeight","maxHeight","backgroundColor","transition","transform","img","display","HtmlTooltip","tooltip","color","fontSize","typography","pxToRem","border","Playlists","accessToken","refreshToken","history","playlist","setPlaylist","classes","tokens","currentElement","node","className","scrollIntoView","block","behavior","console","log","fetchPlaylists","items","map","list","name","tracks","total","owner","display_name","id","pathname","state","backgroundImage","images","url","backgroundPosition","backgroundSize","backgroundRepeat","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\"\r\nimport spotifyPlaylists from \"../services/spotifyPlaylists\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport debug from \"../helpers/debug\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        margin: \"0.5em\",\r\n        minWidth: 400,\r\n        maxWidth: 400,\r\n        minHeight: 400,\r\n        maxHeight: 400,\r\n        backgroundColor: \"rgba(0,0,0,0)\",\r\n        transition: \"transform .2s\",\r\n        \"&:hover\": {\r\n            transform: \"scale(1.03)\"\r\n        }\r\n    },\r\n    img: {\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\"\r\n    }\r\n}))\r\n\r\nconst HtmlTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#f5f5f9\",\r\n        color: \"rgba(0, 0, 0, 0.87)\",\r\n        maxWidth: 320,\r\n        fontSize: theme.typography.pxToRem(14),\r\n        border: \"1px solid #dadde9\"\r\n    }\r\n}))(Tooltip)\r\n\r\nconst Playlists = ({ accessToken, refreshToken, history }) => {\r\n    const [playlist, setPlaylist] = useState([])\r\n\r\n    const classes = useStyles()\r\n\r\n    const tokens = {\r\n        accessToken,\r\n        refreshToken\r\n    }\r\n\r\n    const currentElement = useCallback(\r\n        node => {\r\n            if (node !== null) {\r\n                if (node.className === history) {\r\n                    node.scrollIntoView({ block: \"center\", behavior: \"smooth\" })\r\n                    console.log(\"scrolling to \" + node.className)\r\n                }\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n\r\n    useEffect(() => {\r\n        const fetchPlaylists = async () => {\r\n            //let response = await spotifyPlaylists.getPlaylists(tokens)\r\n            //console.log(response)\r\n            //setPlaylist(response.items)\r\n            setPlaylist(debug.items)\r\n        }\r\n        fetchPlaylists()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Grid alignItems=\"center\" justify=\"center\">\r\n            {playlist.map(list => (\r\n                <Grid item xs={4}>\r\n                <HtmlTooltip\r\n                    title={\r\n                        <div>\r\n                            <Typography variant=\"h6\">{list.name}</Typography>\r\n                            <Typography variant=\"p\">\r\n                                Tracks: {list.tracks.total}\r\n                                <br />\r\n                                Made by: {list.owner.display_name}\r\n                            </Typography>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <div className={`${list.id}`} ref={currentElement}>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/main/tracks/`,\r\n                                state: { list }\r\n                            }}\r\n                        >\r\n                            <Paper\r\n                                className={classes.paper}\r\n                                style={{\r\n                                    backgroundImage: `url(${\r\n                                        list.images[0].url\r\n                                    })`,\r\n                                    backgroundPosition: \"center\",\r\n                                    backgroundSize: \"cover\",\r\n                                    backgroundRepeat: \"no-repeat\",\r\n                                    opacity: \"1\"\r\n                                }}\r\n                            >\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={6}>\r\n                                        {/*\r\n                                        <img\r\n                                        src={list.images[0].url}\r\n                                        alt={list.name}\r\n                                        className={classes.img}\r\n                                        />\r\n                                        */}\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        xs={6}\r\n                                        container\r\n                                        direction=\"column\"\r\n                                    >\r\n                                        {/* \r\n                                        <p>{list.name}</p>\r\n                                        <p>Songs: {list.tracks.total}</p>\r\n                                        */}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Link>\r\n                    </div>\r\n                </HtmlTooltip>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Playlists\r\n"]},"metadata":{},"sourceType":"module"}