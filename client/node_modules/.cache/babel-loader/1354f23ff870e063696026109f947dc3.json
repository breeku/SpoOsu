{"ast":null,"code":"import _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Playlists.js\";\nimport React, { useState, useEffect } from \"react\";\nimport spotifyPlaylists from \"../services/spotifyPlaylists\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst Playlists = ({\n  accessToken,\n  refreshToken\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        playlist = _useState2[0],\n        setPlaylist = _useState2[1];\n\n  const tokens = {\n    accessToken,\n    refreshToken\n  };\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      let response = await spotifyPlaylists.getPlaylists(tokens);\n      setPlaylist(response.items);\n    };\n\n    fetchPlaylists(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 640,\n    cellWidth: 640,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, playlist.map(list => React.createElement(GridListTile, {\n    key: list.key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: list.images[0].url,\n    alt: list.name,\n    height: 320,\n    width: 320,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })))));\n};\n\nexport default Playlists;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Playlists.js"],"names":["React","useState","useEffect","spotifyPlaylists","GridList","GridListTile","Playlists","accessToken","refreshToken","playlist","setPlaylist","tokens","fetchPlaylists","response","getPlaylists","items","map","list","key","images","url","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAmC;AAAA,oBACjBP,QAAQ,CAAC,EAAD,CADS;AAAA;AAAA,QAC1CQ,QAD0C;AAAA,QAChCC,WADgC;;AAGjD,QAAMC,MAAM,GAAG;AACXJ,IAAAA,WADW;AAEXC,IAAAA;AAFW,GAAf;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,cAAc,GAAG,YAAY;AAC/B,UAAIC,QAAQ,GAAG,MAAMV,gBAAgB,CAACW,YAAjB,CAA8BH,MAA9B,CAArB;AACAD,MAAAA,WAAW,CAACG,QAAQ,CAACE,KAAV,CAAX;AACH,KAHD;;AAIAH,IAAAA,cAAc,GALF,CAMhB;AACC,GAPQ,EAON,EAPM,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE,GAAtB;AAA2B,IAAA,SAAS,EAAE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,CAACO,GAAT,CAAaC,IAAI,IACd,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,GAAzB;AAA8B,IAAA,GAAG,EAAEH,IAAI,CAACI,IAAxC;AAA8C,IAAA,MAAM,EAAE,GAAtD;AAA2D,IAAA,KAAK,EAAE,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CADL,CADJ,CADJ;AAWH,CA3BD;;AA6BA,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport spotifyPlaylists from \"../services/spotifyPlaylists\"\r\nimport GridList from \"@material-ui/core/GridList\"\r\nimport GridListTile from \"@material-ui/core/GridListTile\"\r\n\r\nconst Playlists = ({ accessToken, refreshToken }) => {\r\n    const [playlist, setPlaylist] = useState([])\r\n\r\n    const tokens = {\r\n        accessToken,\r\n        refreshToken\r\n    }\r\n    useEffect(() => {\r\n        const fetchPlaylists = async () => {\r\n            let response = await spotifyPlaylists.getPlaylists(tokens)\r\n            setPlaylist(response.items)\r\n        }\r\n        fetchPlaylists()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <GridList cellHeight={640} cellWidth={640}>\r\n                {playlist.map(list => (\r\n                    <GridListTile key={list.key}>\r\n                        <img src={list.images[0].url} alt={list.name} height={320} width={320} />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlists\r\n"]},"metadata":{},"sourceType":"module"}