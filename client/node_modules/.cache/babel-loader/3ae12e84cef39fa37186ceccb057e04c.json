{"ast":null,"code":"var _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Playlists\\\\PlaylistList.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LazyLoad from \"react-lazyload\";\nconst useStyles = makeStyles(theme => ({\n  imageContainer: {\n    position: \"relative\",\n    textAlign: \"center\",\n    transition: \"transform .2s\",\n    \"&:hover\": {\n      transform: \"scale(1.03)\"\n    }\n  },\n  textCentered: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"calc(96%)\",\n    transform: \"translate(-50%, -50%)\",\n    color: \"white\",\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  },\n  image: {\n    borderRadius: \"5px\",\n    margin: \"0.5em\",\n    maxWidth: 500,\n    maxHeight: 500,\n    backgroundColor: \"rgba(0,0,0,0)\"\n  },\n  placeholder: {\n    minWidth: 500,\n    minHeight: 500\n  }\n}));\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 320,\n    fontSize: theme.typography.pxToRem(14),\n    border: \"1px solid #dadde9\"\n  }\n}))(Tooltip);\n\nconst PlaylistList = ({\n  playlist,\n  tokens,\n  list,\n  currentElement\n}) => {\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    xl: 4,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\".concat(list.id),\n    ref: currentElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(HtmlTooltip, {\n    title: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, list.name), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Tracks: \", list.tracks.total, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \"Made by: \", list.owner.display_name)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/main/tracks/\",\n      state: {\n        list,\n        playlist,\n        tokens\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(LazyLoad, {\n    placeholder: React.createElement(\"div\", {\n      className: classes.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }),\n    once: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.image,\n    src: list.images[0].url,\n    alt: list.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.textCentered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, list.name))))));\n};\n\nexport default PlaylistList;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Playlists\\PlaylistList.js"],"names":["React","Grid","makeStyles","withStyles","Link","Tooltip","Typography","LazyLoad","useStyles","theme","imageContainer","position","textAlign","transition","transform","textCentered","top","left","width","color","backgroundColor","image","borderRadius","margin","maxWidth","maxHeight","placeholder","minWidth","minHeight","HtmlTooltip","tooltip","fontSize","typography","pxToRem","border","PlaylistList","playlist","tokens","list","currentElement","classes","id","name","tracks","total","owner","display_name","pathname","state","images","url"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport LazyLoad from \"react-lazyload\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    imageContainer: {\r\n        position: \"relative\",\r\n        textAlign: \"center\",\r\n        transition: \"transform .2s\",\r\n        \"&:hover\": {\r\n            transform: \"scale(1.03)\"\r\n        }\r\n    },\r\n    textCentered: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        width: \"calc(96%)\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,0.4)\"\r\n    },\r\n    image: {\r\n        borderRadius: \"5px\",\r\n        margin: \"0.5em\",\r\n        maxWidth: 500,\r\n        maxHeight: 500,\r\n        backgroundColor: \"rgba(0,0,0,0)\",\r\n    },\r\n    placeholder: {\r\n        minWidth: 500,\r\n        minHeight: 500,\r\n    },\r\n}))\r\n\r\nconst HtmlTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#f5f5f9\",\r\n        color: \"rgba(0, 0, 0, 0.87)\",\r\n        maxWidth: 320,\r\n        fontSize: theme.typography.pxToRem(14),\r\n        border: \"1px solid #dadde9\"\r\n    }\r\n}))(Tooltip)\r\n\r\nconst PlaylistList = ({playlist, tokens, list ,currentElement}) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        md={6}\r\n        xl={4}\r\n        justify=\"center\"\r\n    >\r\n        <div className={`${list.id}`} ref={currentElement}>\r\n            <HtmlTooltip\r\n                title={\r\n                    <div>\r\n                        <Typography variant=\"h6\">\r\n                            {list.name}\r\n                        </Typography>\r\n                        <Typography>\r\n                            Tracks: {list.tracks.total}\r\n                            <br />\r\n                            Made by: {list.owner.display_name}\r\n                        </Typography>\r\n                    </div>\r\n                }\r\n            >\r\n                <Link\r\n                    to={{\r\n                        pathname: `/main/tracks/`,\r\n                        state: { list, playlist, tokens}\r\n                    }}\r\n                >\r\n                    <div className={classes.imageContainer}>\r\n                        <LazyLoad\r\n                            placeholder={\r\n                                <div\r\n                                    className={classes.placeholder}\r\n                                />\r\n                            }\r\n                            once\r\n                        >\r\n                            <img\r\n                                className={classes.image}\r\n                                src={list.images[0].url}\r\n                                alt={list.name}\r\n                            />\r\n                        </LazyLoad>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            className={classes.textCentered}\r\n                        >\r\n                            {list.name}\r\n                        </Typography>\r\n                    </div>\r\n                </Link>\r\n            </HtmlTooltip>\r\n        </div>\r\n    </Grid>\r\n    )\r\n}\r\n\r\nexport default PlaylistList"]},"metadata":{},"sourceType":"module"}