{"ast":null,"code":"var _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Tracks\\\\TrackList.js\";\nimport React from 'react';\nimport Modal from \"@material-ui/core/Modal\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst TrackList = ({\n  track\n}) => {\n  return React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    key: track.track.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    style: {\n      backgroundImage: \"url(\".concat(track.track.album.images[0].url, \")\"),\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    className: classes.textCentered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, track.track.artists[0].name), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, track.track.name), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"ID: \", track.track.id))), React.createElement(Grid, {\n    item: true,\n    className: classes.buttonCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, track.beatmaps ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Maps\"), React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.modal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Beatmaps\"), React.createElement(\"div\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, track.beatmaps.beatmaps.map(beatmap => React.createElement(\"div\", {\n    key: beatmap.beatmap_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, beatmap.title, \", by\", beatmap.mapper, \"AR\", beatmap.difficulty_ar), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    target: \"_blank\",\n    href: \"https://osu.ppy.sh/beatmapsets/\" + beatmap.beatmapset_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Download\"))))))) : loading !== track.track.id ? React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleSingular(track.track, track.track.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Get\") : React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })))));\n};\n\nexport default TrackList;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Tracks\\TrackList.js"],"names":["React","Modal","Paper","Button","Grid","Typography","TrackList","track","id","classes","paper","backgroundImage","album","images","url","backgroundPosition","backgroundSize","backgroundRepeat","textCentered","artists","name","buttonCenter","beatmaps","handleOpen","open","handleClose","modal","map","beatmap","beatmap_id","title","mapper","difficulty_ar","beatmapset_id","loading","handleSingular"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Modal from \"@material-ui/core/Modal\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\n\r\nconst TrackList = ({track}) => {\r\n    return (\r\n<Grid\r\n                                    container\r\n                                    item\r\n                                    xs={12}\r\n                                    justify=\"center\"\r\n                                    key={track.track.id}\r\n                                >\r\n                                    <Paper\r\n                                        className={classes.paper}\r\n                                        style={{\r\n                                            backgroundImage: `url(${\r\n                                                track.track.album.images[0].url\r\n                                            })`,\r\n                                            backgroundPosition: \"center\",\r\n                                            backgroundSize: \"cover\",\r\n                                            backgroundRepeat: \"no-repeat\"\r\n                                        }}\r\n                                    >\r\n                                        <Grid item xs={12} sm container>\r\n                                            {/*<Grid item>\r\n                                                <img src={track.track.album.images[1].url} className={classes.image}/>\r\n                                            </Grid>*/}\r\n                                            <Grid\r\n                                                item\r\n                                                xs\r\n                                                container\r\n                                                direction=\"column\"\r\n                                                spacing={2}\r\n                                            >\r\n                                                <Grid\r\n                                                    item\r\n                                                    xs\r\n                                                    className={\r\n                                                        classes.textCentered\r\n                                                    }\r\n                                                >\r\n                                                    <Typography\r\n                                                        gutterBottom\r\n                                                        variant=\"h6\"\r\n                                                    >\r\n                                                        {\r\n                                                            track.track\r\n                                                                .artists[0].name\r\n                                                        }\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        gutterBottom\r\n                                                        variant=\"subtitle1\"\r\n                                                    >\r\n                                                        {track.track.name}\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"body2\"\r\n                                                        color=\"textSecondary\"\r\n                                                    >\r\n                                                        ID: {track.track.id}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item className={classes.buttonCenter}>\r\n                                                {track.beatmaps ? (\r\n                                                    <div>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={handleOpen}\r\n                                                        >\r\n                                                            Maps\r\n                                                        </Button>\r\n                                                        <Modal\r\n                                                            aria-labelledby=\"simple-modal-title\"\r\n                                                            aria-describedby=\"simple-modal-description\"\r\n                                                            open={open}\r\n                                                            onClose={\r\n                                                                handleClose\r\n                                                            }\r\n                                                        >\r\n                                                            <div\r\n                                                                className={\r\n                                                                    classes.modal\r\n                                                                }\r\n                                                            >\r\n                                                                <h2 id=\"simple-modal-title\">\r\n                                                                    Beatmaps\r\n                                                                </h2>\r\n                                                                <div id=\"simple-modal-description\">\r\n                                                                    {track.beatmaps.beatmaps.map(\r\n                                                                        beatmap => (\r\n                                                                            <div\r\n                                                                                key={\r\n                                                                                    beatmap.beatmap_id\r\n                                                                                }\r\n                                                                            >\r\n                                                                                <Typography>\r\n                                                                                    {\r\n                                                                                        beatmap.title\r\n                                                                                    }\r\n                                                                                    ,\r\n                                                                                    by\r\n                                                                                    {\r\n                                                                                        beatmap.mapper\r\n                                                                                    }\r\n                                                                                    AR\r\n                                                                                    {\r\n                                                                                        beatmap.difficulty_ar\r\n                                                                                    }\r\n                                                                                </Typography>\r\n                                                                                <Button\r\n                                                                                    variant=\"contained\"\r\n                                                                                    color=\"primary\"\r\n                                                                                    target=\"_blank\"\r\n                                                                                    href={\r\n                                                                                        \"https://osu.ppy.sh/beatmapsets/\" +\r\n                                                                                        beatmap.beatmapset_id\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    Download\r\n                                                                                </Button>\r\n                                                                            </div>\r\n                                                                        )\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Modal>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    (loading !== track.track.id ? <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        onClick={() =>\r\n                                                            handleSingular(\r\n                                                                track.track,\r\n                                                                track.track.id\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        Get\r\n                                                    </Button> : <CircularProgress/>)\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Grid>\r\n    )\r\n}\r\n\r\nexport default TrackList"]},"metadata":{},"sourceType":"module"}