{"ast":null,"code":"import _objectSpread from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Tracks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Redirect } from \"react-router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TrackList from \"./Tracks/TrackList\";\nimport spotify from \"../services/spotify\";\nimport osu from \"../services/osu\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    marginTop: \"0.5em\"\n  },\n  buttonCenter: {\n    margin: \"auto\",\n    paddingLeft: \"1em\"\n  }\n}));\n\nconst Tracks = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        tracks = _useState2[0],\n        setTracks = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tracksToShow = _useState4[0],\n        setTracksToShow = _useState4[1];\n\n  const _useState5 = useState(props.location.state.tokens.accessToken),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newAccessToken = _useState6[0],\n        setNewAccessToken = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const classes = useStyles();\n\n  const handleSingular = async (track, id) => {\n    setLoading(id);\n    let response = await osu.getTrack(track, id);\n    let copy = [...tracks];\n\n    for (track of copy) {\n      if (track.track.id === response.id) {\n        let index = copy.findIndex(track => track.track.id === response.id);\n\n        let updatedTrack = _objectSpread({}, track, {\n          beatmaps: response.osuTracks\n        });\n\n        copy[index] = updatedTrack;\n        setTracks(copy);\n        setLoading(null);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      let response = await spotify.getTracks({\n        id: props.location.state.list.id,\n        accessToken: newAccessToken,\n        refreshToken: props.location.state.tokens.refreshToken\n      });\n      setTracks(response.tracks.items);\n      setTracksToShow(response.tracks.items.slice(0, 6));\n      if (response.refreshedToken) setNewAccessToken(response.refreshedToken);\n    };\n\n    fetchTracks();\n  }, [newAccessToken, props.location.state.list.id, props.location.state.tokens.refreshToken]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.location.state ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.location.state.list.name), React.createElement(Link, {\n    to: {\n      pathname: \"/main/\",\n      state: {\n        history: props.location.state.list.id,\n        cachedPlaylist: props.location.state.playlist,\n        refreshToken: props.location.state.tokens.refreshToken,\n        accessToken: newAccessToken\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Go back\")), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, tracksToShow ? tracksToShow.map(track => React.createElement(TrackList, {\n    handleSingular: handleSingular,\n    loading: loading,\n    track: track,\n    key: track.track.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })) : React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Next\")) : React.createElement(Redirect, {\n    to: \"/main/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n};\n\nexport default Tracks;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Tracks.js"],"names":["React","useState","useEffect","Link","Button","Grid","Typography","CircularProgress","Redirect","makeStyles","TrackList","spotify","osu","useStyles","theme","header","marginTop","buttonCenter","margin","paddingLeft","Tracks","props","tracks","setTracks","tracksToShow","setTracksToShow","location","state","tokens","accessToken","newAccessToken","setNewAccessToken","loading","setLoading","classes","handleSingular","track","id","response","getTrack","copy","index","findIndex","updatedTrack","beatmaps","osuTracks","fetchTracks","getTracks","list","refreshToken","items","slice","refreshedToken","name","pathname","history","cachedPlaylist","playlist","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { CircularProgress } from \"@material-ui/core\" \r\nimport { Redirect } from \"react-router\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport TrackList from \"./Tracks/TrackList\"\r\n\r\nimport spotify from \"../services/spotify\"\r\nimport osu from \"../services/osu\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        marginTop: \"0.5em\"\r\n    },\r\n    buttonCenter: {\r\n        margin: \"auto\",\r\n        paddingLeft: \"1em\"\r\n    }\r\n}))\r\n\r\nconst Tracks = props => {\r\n    const [tracks, setTracks] = useState(null)\r\n    const [tracksToShow, setTracksToShow] = useState(null)\r\n    const [newAccessToken, setNewAccessToken] = useState(\r\n        props.location.state.tokens.accessToken\r\n    )\r\n    const [loading, setLoading] = useState(null)\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSingular = async (track, id) => {\r\n        setLoading(id)\r\n        let response = await osu.getTrack(track, id)\r\n        let copy = [...tracks]\r\n        for (track of copy) {\r\n            if (track.track.id === response.id) {\r\n                let index = copy.findIndex(\r\n                    track => track.track.id === response.id\r\n                )\r\n                let updatedTrack = {\r\n                    ...track,\r\n                    beatmaps: response.osuTracks\r\n                }\r\n                copy[index] = updatedTrack\r\n                setTracks(copy)\r\n                setLoading(null)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchTracks = async () => {\r\n            let response = await spotify.getTracks({\r\n                id: props.location.state.list.id,\r\n                accessToken: newAccessToken,\r\n                refreshToken: props.location.state.tokens.refreshToken\r\n            })\r\n            setTracks(response.tracks.items)\r\n            setTracksToShow(response.tracks.items.slice(0,6))\r\n            if (response.refreshedToken)\r\n                setNewAccessToken(response.refreshedToken)\r\n        }\r\n        fetchTracks()\r\n    }, [\r\n        newAccessToken,\r\n        props.location.state.list.id,\r\n        props.location.state.tokens.refreshToken\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            {props.location.state ? (\r\n                <div>\r\n                    <Typography variant=\"h6\">\r\n                        {props.location.state.list.name}\r\n                    </Typography>\r\n\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/main/\",\r\n                            state: {\r\n                                history: props.location.state.list.id,\r\n                                cachedPlaylist: props.location.state.playlist,\r\n                                refreshToken:\r\n                                    props.location.state.tokens.refreshToken,\r\n                                accessToken: newAccessToken\r\n                            }\r\n                        }}\r\n                    >\r\n                        <Button variant=\"contained\" color=\"secondary\">\r\n                            Go back\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <Grid container spacing={2} className={classes.header}>\r\n                        {tracksToShow ? (\r\n                            tracksToShow.map(track => (\r\n                                <TrackList\r\n                                    handleSingular={handleSingular}\r\n                                    loading={loading}\r\n                                    track={track}\r\n                                    key={track.track.id}\r\n                                />\r\n                            ))\r\n                        ) : (\r\n                            <CircularProgress />\r\n                        )}\r\n                    </Grid>\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.header}>Next</Button>\r\n                </div>\r\n            ) : (\r\n                <Redirect to=\"/main/\" />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tracks\r\n"]},"metadata":{},"sourceType":"module"}