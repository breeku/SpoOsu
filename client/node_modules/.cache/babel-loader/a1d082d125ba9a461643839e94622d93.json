{"ast":null,"code":"import _slicedToArray from \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\web_dev\\\\github\\\\SpoOsu\\\\client\\\\src\\\\components\\\\Playlists.js\";\nimport React, { useState, useEffect } from \"react\";\nimport spotifyPlaylists from \"../services/spotifyPlaylists\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport TracksModal from \"./TracksModal\";\nimport Modal from \"@material-ui/core/Modal\";\nimport debug from \"../helpers/debug\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: \"2em\",\n    margin: \"2em\",\n    maxWidth: 500\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\n\nconst Playlists = ({\n  accessToken,\n  refreshToken\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        playlist = _useState2[0],\n        setPlaylist = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  const tokens = {\n    accessToken,\n    refreshToken\n  };\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      //let response = await spotifyPlaylists.getPlaylists(tokens)\n      //console.log(response)\n      //setPlaylist(response.items)\n      setPlaylist(debug.items);\n    };\n\n    fetchPlaylists(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, playlist.map(list => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: list.images[0].url,\n    alt: list.name,\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, list.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Songs: \", list.tracks.total)))), React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TracksModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))))));\n};\n\nexport default Playlists;","map":{"version":3,"sources":["F:\\web_dev\\github\\SpoOsu\\client\\src\\components\\Playlists.js"],"names":["React","useState","useEffect","spotifyPlaylists","Grid","Paper","makeStyles","Container","TracksModal","Modal","debug","useStyles","theme","root","flexGrow","paper","padding","margin","maxWidth","img","display","maxHeight","Playlists","accessToken","refreshToken","playlist","setPlaylist","open","setOpen","handleOpen","handleClose","classes","tokens","fetchPlaylists","items","map","list","images","url","name","tracks","total"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport spotifyPlaylists from \"../services/spotifyPlaylists\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport TracksModal from \"./TracksModal\"\r\nimport Modal from \"@material-ui/core/Modal\"\r\n\r\nimport debug from \"../helpers/debug\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        padding: \"2em\",\r\n        margin: \"2em\",\r\n        maxWidth: 500\r\n    },\r\n    img: {\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\"\r\n    }\r\n}))\r\n\r\nconst Playlists = ({ accessToken, refreshToken }) => {\r\n    const [playlist, setPlaylist] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const classes = useStyles()\r\n    \r\n    const tokens = {\r\n        accessToken,\r\n        refreshToken\r\n    }\r\n    useEffect(() => {\r\n        const fetchPlaylists = async () => {\r\n            //let response = await spotifyPlaylists.getPlaylists(tokens)\r\n            //console.log(response)\r\n            //setPlaylist(response.items)\r\n            setPlaylist(debug.items)\r\n        }\r\n        fetchPlaylists()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.root}>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {playlist.map(list => (\r\n                    <div>\r\n                        <Paper className={classes.paper} onClick={handleOpen}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={6}>\r\n                                    <img\r\n                                        src={list.images[0].url}\r\n                                        alt={list.name}\r\n                                        className={classes.img}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6} container direction=\"column\">\r\n                                    <p>{list.name}</p>\r\n                                    <p>Songs: {list.tracks.total}</p>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                        <Modal open={open} onClose={handleClose}>\r\n                            <TracksModal />\r\n                        </Modal>\r\n                    </div>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Playlists\r\n"]},"metadata":{},"sourceType":"module"}